var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = Tangle","category":"page"},{"location":"#Tangle","page":"Home","title":"Tangle","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Modules = [ Tangle ]","category":"page"},{"location":"#Tangle.KnotParameter","page":"Home","title":"Tangle.KnotParameter","text":"KnotParameter is a floating point number modulo 1.\n\n\n\n\n\n","category":"type"},{"location":"#Tangle.Line","page":"Home","title":"Tangle.Line","text":"A Line is represented by two points on it. For a line segment, these points are the end points.\n\n\n\n\n\n","category":"type"},{"location":"#Tangle.Line-Tuple{Any}","page":"Home","title":"Tangle.Line","text":"A Line can be treated as a parametric function to identify some point on the line.\n\n\n\n\n\n","category":"method"},{"location":"#Tangle.Loop","page":"Home","title":"Tangle.Loop","text":"Loop\n\nA Loop represents a mathematical knot.\n\nIn one sense, it is a function in some parameter p (a KnotParameter) that returns a point in R3 for p.\n\nloop(0.0) == loop(1.0)\n\nwhere loop is a Loop.\n\nAs a means of defining and representing knots, a Loop has a sorted set of \"points of interest\".  Each point of interest is just a specific value for the parameter t.\n\n\n\n\n\n","category":"type"},{"location":"#Tangle.Loop-Tuple{KnotParameter}","page":"Home","title":"Tangle.Loop","text":"(::Loop)(at)\n\nReturn a three element vector of the X, Y and Z coordinates of the point of the Loop corresponding to `at'.\n\nThis function should be continuous and defined by the specified points of interest.\n\n\n\n\n\n","category":"method"},{"location":"#Tangle.LoopSegmentsIterator","page":"Home","title":"Tangle.LoopSegmentsIterator","text":"LoopSegmentsIterator(::Loop)\n\nReturn an iterator for iterating over the segments of a Loop.\n\nEach segment is a two element tuple of successive points of interest of Loop.\n\n\n\n\n\n","category":"type"},{"location":"#Tangle.PointOfInterest","page":"Home","title":"Tangle.PointOfInterest","text":"PointOfInterest\n\nPointOfInterest represents a point on a Loop for which a location has been specified.\n\nNo two points of interest should have the same KnotParameter widthin a Loop.\n\nNo two points of interest should have equal coordinates within the same mathematical link.\n\nCurrently, no code enforces these rules.\n\n\n\n\n\n","category":"type"},{"location":"#Tangle.divide_interval-Tuple{KnotParameter, KnotParameter, Integer}","page":"Home","title":"Tangle.divide_interval","text":"divide_interval(from::KnotParameter, to::KnotParameter, count::Integer\n\nReturn count KnotParameters evenly spaced between from and to.\n\n\n\n\n\n","category":"method"},{"location":"#Tangle.find_poi-Tuple{Any, Loop}","page":"Home","title":"Tangle.find_poi","text":"find_poi(predicate, ::Loop)\n\nReturn the PointOfInterest from the Loop which satisfies predicate.\n\n\n\n\n\n","category":"method"},{"location":"#Tangle.grab-Tuple{Loop, KnotParameter, Any, Symbol}","page":"Home","title":"Tangle.grab","text":"grab(::Loop, ::KnotParameter, label, delta)\n\nReturn a new Loop with a point of interest added at the specified KnotParameter with the specified symbol.\n\nThe new point of interest will be displaced by delta \"outward\".\n\nlabel provides a way to label or explain the reason for grabbing.\n\n\n\n\n\n","category":"method"},{"location":"#Tangle.grab-Tuple{Loop, Symbol, Any, Symbol}","page":"Home","title":"Tangle.grab","text":"grab(loop::Loop, at::KnotParameter, delta, label::Symbol)\n\nReturn a new loop with a point of interest added between the one labeled after and the next point of interest after it.\n\nThe new point of interest will be displaced by delta \"outward\".\n\nlabel provides a way to label or explain the reason for grabbing.\n\n\n\n\n\n","category":"method"},{"location":"#Tangle.next-Tuple{Loop, KnotParameter}","page":"Home","title":"Tangle.next","text":"next(loop::Loop, kp::KnotParameter)\n\nIf kp is the KnotParameter of some PointOfInterest in loop then return the next PointOfInterest in that loop.\n\n\n\n\n\n","category":"method"},{"location":"#Tangle.parallel-Tuple{Tangle.Line, Tangle.Line}","page":"Home","title":"Tangle.parallel","text":"parallel(line1::Line, line2::Line)::Bool\n\nReturn true if the two lines are parallel.\n\n\n\n\n\n","category":"method"},{"location":"#Tangle.previous-Tuple{Loop, KnotParameter}","page":"Home","title":"Tangle.previous","text":"previous(loop::Loop, kp::KnotParameter)\n\nIf kp is the KnotParameter of some PointOfInterest in loop then return the next PointOfInterest in that loop.  Otherwise, return nothing.\n\n\n\n\n\n","category":"method"},{"location":"#Tangle.proximal_points-Tuple{Tangle.Line, Tangle.Line}","page":"Home","title":"Tangle.proximal_points","text":"proximal_points(line1::Line, line2::Line)\n\nReturn the two points (as 3 element Vectors) which are the point on line1 closest to line2 and the point on line2 closest to line1 respectively.\n\n\n\n\n\n","category":"method"},{"location":"#Tangle.reidemeisterTwist-Tuple{Loop, PointOfInterest, Any}","page":"Home","title":"Tangle.reidemeisterTwist","text":"reidemeisterTwist(loop::Loop, handle::PointOfInterest, twist::Twist)\n\nReturn a new loop by applying the Reidermeister I (twist) operation to loop at handle.\n\ntwist determines the direstion of twist.\n\nhandle should be the result of a grab operation.\n\n\n\n\n\n","category":"method"},{"location":"#Tangle.symbolic_vector-Tuple{Symbol, Integer}","page":"Home","title":"Tangle.symbolic_vector","text":"symbolic_vector(name::Symbol, n::Integer)\n\nDefine n Symbolics variables whose names are based on name and return a vector of those variables.\n\n\n\n\n\n","category":"method"},{"location":"#Tangle.vsubs-Tuple{Vector{Symbolics.Num}, Vararg{Any}}","page":"Home","title":"Tangle.vsubs","text":"vsubs(v::Vector{Symbolics.Num}, values...)\n\nReturn a list of Pairs suitable for constructing a Dict which is suitable for passing to Symbolics.substitute, which substitues each of values with the corresponding variable in v.\n\n\n\n\n\n","category":"method"},{"location":"#Tangle.was-Tuple{Tangle.Grab}","page":"Home","title":"Tangle.was","text":"was(::Grab)\n\nReturn the PointOfInterest that this operation grabbed from.\n\n\n\n\n\n","category":"method"}]
}
